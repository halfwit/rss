#!/bin/sh
### CURRENTLY BROKEN ###
## Dmenu based frontend to read RSS directory
RSS=$XDG_DATA_HOME/rss

# List all feeds
list_all() {
	cd "$RSS"
	ls
	printf '%s\n' "exit"
}	

# List all files, which can be represented by a directory structure
list_sub() {
	cd "$RSS/$@"
	ls -t -I url | while read -r item; do
		if test -d "$item"; then
			find "$item" -type f
		else
			printf '%s\n' "$item"
		fi
	done | sed 's|^.*read/||'
	printf '%s\n%s\n' "clear all" "exit"
}

# List all files with [new] in title
list_main() {
	cd "$RSS"
	# Catch case when we have no feeds
	if ls -d "$RSS"/*/unread/* >/dev/null; then
		dirname */unread/* | sed 's|/unread||' | sort -u
	fi
	printf '%s\n%s\n' "view all" "exit"
}

# You can comment this out, it's just for my status bar
update_count() {
	if ls -d "$RSS"/*/unread/* >/dev/null; then
		dirname "$RSS"/*/unread/* | wc -l > "$XDG_RUNTIME_DIR/statusbar/rss"
	else
		printf '%s\n' "" > "$XDG_RUNTIME_DIR/statusbar/rss"
	fi
}

# Remove [new] and update counts
scrub() {
	# unread to read
	new="$(printf '%s\n' "$@" | sed 's/unread/read/')"
	# Ensure we have a `read` directory
	mkdir -p "$(dirname "$new")"
	case "$@" in
		*unread*) mv "$@" "$new" ;;
	esac
}

plumb() {
	if test -d "$RSS/$@"; then
		printf '%s\n' "$@"
	else
		plumber < "$RSS/$@" >/dev/null &
		scrub "$RSS/$@"
		printf '%s\n' "exit"
	fi
}

# Read all selections and plumb any good result
handle() {
	while read -r in; do
		case "$in" in
			# Exit has to be from non-function
			exit)   	update_count; printf '%s\n' "exit" ;;
			clear\ all) for i in "$RSS/$@"/*; do
							scrub "$i"
						done 
						update_count
						printf '%s\n' "$@" ;;
			view\ all)	printf '%s\n' "all" ;;
			*)			if test -f "$RSS/$@/read/$in"; then
							plumb "$@/read/$in"
						elif test -f "$RSS/$@/unread/$in"; then
							plumb "$@/unread/$in"
						else
							plumb "$in"
						fi ;;
		esac
	done
}

# Run list based on result of previous actions
switch() {
	case "$@" in
		main)	list_main     | dmenu -p "Select feed: " | handle "$@" ;;
		all)	list_all      | dmenu -p "Select feed: " | handle "$@" ;;
		*)		list_sub "$@" | dmenu -p "Select post: " | handle "$@" ;;
	esac
}

## Main loop
while :; do
	# Assume main if nothing set
	test -z "$1" && set -- main
	set -- "$(switch "$@")"
	test "$1" = exit && exit 0
done
